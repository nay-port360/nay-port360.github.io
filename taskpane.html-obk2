<!DOCTYPE html>
<html>
<head>
	<!-- Office JavaScript API -->
    <script type="text/javascript" src="https://appsforoffice.microsoft.com/lib/1/hosted/office.js"></script>
</head>
<body>
	<button id="createEnquiry">create Enquiry 17</button>
</body>

<script>
	Office.onReady((info) => {
        if (info.host === Office.HostType.Outlook) {
            document.getElementById("createEnquiry").onclick = createEnquiry;
        }
    });

    function createEnquiry() {
		const item = Office.context.mailbox.item;

		// item.getAsFileAsync(Office.CoercionType.Ooxml, function (result) {
		// 	if (result.status === Office.AsyncResultStatus.Succeeded) {
		// 		console.log('success');
		// 		// const emailFile = result.value;
		// 		// uploadFileToEndpoint(emailFile);
		// 	} else {
		// 	  	console.error("Error getting email as file:", result.error.message);
		// 	}
		// });

		// item.body.getAsync(Office.CoercionType.Html, function (result) {
		// 	if (result.status === Office.AsyncResultStatus.Succeeded) {
		// 		const emailHtml = result.value;
		// 		const emailBlob = new Blob([emailHtml], { type: 'text/html' });
		// 		uploadFileToEndpoint(emailBlob, 'email.html');
		// 	} else {
		// 		console.error("Error getting email body:", result.error.message);
		// 	}
		// });

		// working with invalid file
		// item.getAsFileAsync(function (result) {
		// 	if (result.status === Office.AsyncResultStatus.Succeeded) {
		// 		const emailFile = result.value;
		// 		//const emailBlob = new Blob([emailFile.content], { type: emailFile.format });

		// 		// Check the type and content length for debugging
		//         console.log('Email file format:', emailFile.format);
		//         console.log('Email file size:', emailFile.content.length);

		// 		try {
		//             const emailBlob = new Blob([new Uint8Array(emailFile.content)], { type: 'message/rfc822' });
		            
		//             // Verify the Blob creation
		//             console.log('Blob size:', emailBlob.size);

		//             uploadFileToEndpoint(emailBlob, 'email.eml');
		//         } catch (error) {
		//             console.error('Error creating Blob:', error);
		//         }
				
		// 	} else {
		// 		console.error("Error getting email as file:", result.error.message);
		// 	}
		// });

		// item.getAsFileAsync(Office.CoercionType.EML, function(result) {
		// 	if (result.status === Office.AsyncResultStatus.Succeeded) {
		// 		const emailFile = result.value;

		// 		// Log the email file properties for debugging
		// 		console.log('Email file properties:', emailFile);

		// 		try {
		// 			// Check if the emailFile has necessary properties
		// 			if (emailFile && emailFile.content) {
		// 				// Create a Blob using the content
		// 				const emailBlob = new Blob([emailFile.content], { type: 'message/rfc822' });

		// 				// Verify the Blob creation
		// 				console.log('Blob size:', emailBlob.size);

		// 				uploadFileToEndpoint(emailBlob, 'email.eml');
		// 			} else {
		// 				console.error('Email file content is missing');
		// 			}
		// 		} catch (error) {
		// 			console.error('Error creating Blob:', error);
		// 		}
		// 	} else {
		// 		console.error("Error getting email as file:", result.error.message);
		// 	}
		// });

		// item.getCallbackTokenAsync({ isRest: true }, function (result) {
		// 	if (result.status === Office.AsyncResultStatus.Succeeded) {
		// 		const token = result.value;
		// 		const itemId = item.itemId;

		// 		fetch(`https://outlook.office.com/api/v2.0/me/messages/${itemId}`, {
		// 			headers: {
		// 				'Authorization': `Bearer ${token}`,
		// 				'Accept': 'application/json; odata.metadata=none'
		// 			}
		// 		})
		// 		.then(response => response.json())
		// 		.then(email => {
		// 			const emailBlob = new Blob([JSON.stringify(email)], { type: 'message/rfc822' });
		// 			uploadFileToEndpoint(emailBlob, 'email.eml');
		// 		})
		// 		.catch(error => {
		// 			console.error('Error fetching email content:', error);
		// 		});
		// 	} else {
		// 		console.error("Error getting callback token:", result.error.message);
		// 	}
		// });

		item.getAsFileAsync(function(result) {
		    if (result.status === Office.AsyncResultStatus.Succeeded) {
		        const emailFile = result.value;

		        // Log the email file properties for debugging
		        console.log('Email file properties:', emailFile);

		        try {
		            // Check if the emailFile has necessary properties
		            if (emailFile && emailFile.size > 0) {
		                // Create a Blob using the content
		                const emailBlob = new Blob([emailFile.content], { type: 'message/rfc822' });

		                // Verify the Blob creation
		                console.log('Blob size:', emailBlob.size);

		                uploadFileToEndpoint(emailBlob, 'email.eml');
		            } else {
		                console.error('Email file content is missing');
		            }
		        } catch (error) {
		            console.error('Error creating Blob:', error);
		        }
		    } else {
		        console.error("Error getting email as file:", result.error.message);
		    }
		});
	}

	function uploadFileToEndpoint(file, filename) {
		const endpointUrl = 'https://p360.test/api/upload-tmp-file';
		const token = '4|SMV55jMAKXni9oVKrV1w03g4sCT3anr7pW7OBe24';

		const formData = new FormData();
		formData.append('file', file, filename);

		fetch(endpointUrl, {
			method: 'POST',
			headers: {
				'Authorization': `Bearer ${token}`
			},
			body: formData
		})
		.then(response => response.json())
		.then(data => {
			console.log('Success:', data);
		})
		.catch((error) => {
			console.error('Error:', error);
		});
	}

	// function uploadFileToEndpoint(file, filename) {
	// 	const endpointUrl = 'https://p360.test/api/upload-tmp-file';
	// 	const token = '4|SMV55jMAKXni9oVKrV1w03g4sCT3anr7pW7OBe24';

	// 	const formData = new FormData();
	// 	formData.append('file', file, filename);

	// 	fetch(endpointUrl, {
	// 		method: 'POST',
	// 		headers: {
	// 		'Authorization': `Bearer ${token}`
	// 		},
	// 		body: formData
	// 	})
	// 	.then(response => response.json())
	// 	.then(data => {
	// 		console.log('Success:', data);
	// 	})
	// 	.catch((error) => {
	// 		console.error('Error:', error);
	// 	});
	// }
</script>
</html>